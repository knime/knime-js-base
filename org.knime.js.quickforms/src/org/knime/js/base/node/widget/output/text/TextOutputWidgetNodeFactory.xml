<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="widget_variable_out.png" type="Widget" xmlns="http://knime.org/node/v3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v3.1 http://knime.org/node/v3.1.xsd">
    <name>Text Output Widget (legacy)</name>

   <shortDescription>
        Displays dynamic text.
    </shortDescription>

    <fullDescription>
        <intro>
            <p>
               Displays dynamic text. 
               Superseded by the <a href="https://hub.knime.com/knime/extensions/org.knime.features.base.views/latest/org.knime.base.views.node.textview.TextViewNodeFactory">Text View</a> node.
            </p>
            <p>
            The node supports custom CSS styling. 
            You can simply put CSS rules into a single string and set it as a flow variable 'customCSS' 
            in the node configuration dialog. 
            You will find the list of available classes and their description on our <a href="https://knime.com/css-styling">documentation page</a>.
            </p>
        </intro>
        <option name="Label">
          A descriptive label that will be shown.
        </option>
        <option name="Description">
          Some lines of description that will be shown in the remote control 
          form, for instance by means of a tooltip.
        </option>
        <option name="Text format">
          The format of the text. Can be plain text, pre-formatted (monospace text, retaining line breaks) or
          simple HTML. 
        </option>
        <option name="Sanitize input data">
			<p>
				Sanitizes the available flow variables using a default policy defined by <a href="https://github.com/OWASP/java-html-sanitizer">OWASP</a>. 
			</p>
			<p>
				Set this option if the text format is set to HTML and the used flow variables should be treated as strings or safe HTML strings.
			</p>
		</option>
        <option name="Text">
          The text. Double click the flow variables on the right to insert a placeholder, which
          will be replaced by the actual variable value upon execution. 
        </option>
    </fullDescription>
    
    <interactiveView name="Text Output">The dynamic text output.</interactiveView>

    <ports>
        <inPort index="0" name="Flow Variable Input">
          Variables, which can be used in the text expression.
        </inPort>
    </ports>
</knimeNode>
