<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./widget_refresh.png" type="Widget" xmlns="http://knime.org/node/v4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Refresh Button Widget</name>
	<shortDescription>
       Creates a button widget with configurable text which emits reactivity events in component visualizations.
    </shortDescription>
	<fullDescription>
		<intro>
			<p>
			   Adds a button widget with configurable text which can be used to refresh the composite view of the component. The
			   button widget emits reactivity events that trigger the re-execution of downstream nodes in a component when
			   clicked. It allows users to create interactive Data Apps and visualizations.
				<br /><br />
				To use the node, connect the variable output port to the nodes which should be re-executed.
				<b>The downstream nodes
				of those connected nodes will also be re-executed when the widget is clicked.</b>
			</p>
		</intro>
		<option name="Label">A descriptive label that will be shown above the button.</option>
		<option name="Description">Native browser tooltip text to be shown for the button.</option>
		<option name="Text">The text of the button.</option>
		<option name="Reset Refresh Button">Button which resets the refresh_count variable to zero </option>
	</fullDescription>
	<interactiveView name="Refresh Button Widget">
		Displays a button with text and an optional label which emits reactivity events to re-execute downstream nodes. 
	</interactiveView>
	<ports>
		<outPort index="0" name="Flow Variable Output">Variable output port to connect to nodes which should be re-executed when the widget is clicked. Downstream nodes of
			a node connected to this flow variable output port will also be re-executed, so it's only necessary to connect to the
			root node in each workflow branch for which re-execution is desired. This node produces two flow variables. 
			The first one is trivial and does not contain any information. The second, which is called refresh_count, counts the number of refreshes.</outPort>
	</ports>
</knimeNode>
