{
  "data" : {
    "model" : {
      "label" : "Label",
      "description" : "Enter Description",
      "flowVariableName" : "value-filter",
      "parameterName" : "value-filter",
      "hideInDialog" : false,
      "required" : true,
      "defaultValue" : {
        "column" : "State",
        "values" : [ ],
        "excludes" : [ "WA", "BC", "AE", "AZ", "NC", "NV", "TX", "CO", "FL", "CA", "PA", "AL", "VA", "GA", "SC", "MO", "NY", "IL", "NE", "ID", "KS", "MD", "LA", "DE", "OH", "AR", "WY", "UT", "MN", "HI", "NM", "OR", "IN", "MI", "NJ", "RI", "NH", "CT", "IA", "MA", "OK", "KY", "DC", "AK", "MT", "WI" ],
        "anyUnknownValueHandling" : "EXCLUDE"
      },
      "limitVisibleOptionsParameters" : {
        "selectionType" : "Twinlist",
        "limitVisibleOptions" : {
          "limitNumberOfVisibleOptions" : false,
          "numberOfVisibleOptions" : 5
        }
      },
      "enableColumnField" : true,
      "possibleValues" : {
        "Clean Alternative Fuel Vehicle (CAFV) Eligibility" : [ "Clean Alternative Fuel Vehicle Eligible", "Not eligible due to low battery range", "Eligibility unknown as battery range has not been researched" ],
        "Electric Vehicle Type" : [ "Battery Electric Vehicle (BEV)", "Plug-in Hybrid Electric Vehicle (PHEV)" ],
        "Make" : [ "TESLA", "BMW", "NISSAN", "TOYOTA", "FORD", "FIAT", "CHRYSLER", "AUDI", "VOLVO", "PORSCHE", "JEEP", "HYUNDAI", "VOLKSWAGEN", "CHEVROLET", "KIA", "MERCEDES-BENZ", "MINI", "MITSUBISHI", "HONDA", "RIVIAN", "JAGUAR", "DODGE", "CADILLAC", "LUCID", "SUBARU", "POLESTAR", "LEXUS", "SMART", "ALFA ROMEO", "MAZDA", "FISKER", "LINCOLN", "GENESIS", "LAND ROVER", "GMC", "TH!NK", "AZURE DYNAMICS", "WHEEGO ELECTRIC CARS", "BENTLEY", "ROLLS ROYCE", "ACURA", "RAM" ],
        "State" : [ "WA", "BC", "AE", "AZ", "NC", "NV", "TX", "CO", "FL", "CA", "PA", "AL", "VA", "GA", "SC", "MO", "NY", "IL", "NE", "ID", "KS", "MD", "LA", "DE", "OH", "AR", "WY", "UT", "MN", "HI", "NM", "OR", "IN", "MI", "NJ", "RI", "NH", "CT", "IA", "MA", "OK", "KY", "DC", "AK", "MT", "WI" ]
      }
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "defaultValue" : {
            "type" : "object",
            "properties" : {
              "anyUnknownValueHandling" : {
                "oneOf" : [ {
                  "const" : "EXCLUDE",
                  "title" : "Exclude"
                }, {
                  "const" : "INCLUDE",
                  "title" : "Include"
                } ],
                "title" : "Any unknown value handling",
                "description" : "Specifies the handling of new values:\n<ul>\n<li><b>Exclude</b>: New values are added to the exclude list.</li>\n<li><b>Include</b>: New values are added to the include list.</li>\n</ul>",
                "default" : "EXCLUDE"
              },
              "column" : {
                "type" : "string",
                "title" : "Default column",
                "description" : "The column containing the values to filter.",
                "default" : ""
              },
              "excludes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                },
                "default" : [ ]
              },
              "noColumnsAvailableMessage" : {
                "type" : "object"
              },
              "values" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                },
                "title" : "Default values",
                "description" : "The values that are selected by default.",
                "default" : [ ]
              }
            },
            "default" : {
              "column" : "",
              "values" : [ ],
              "excludes" : [ ],
              "anyUnknownValueHandling" : "EXCLUDE"
            }
          },
          "description" : {
            "type" : "string",
            "title" : "Description",
            "description" : "Some lines of description that will be shown for instance in the node description of the component exposing a dialog.",
            "default" : "Enter Description"
          },
          "enableColumnField" : {
            "type" : "boolean",
            "title" : "Enable column field",
            "description" : "When checked, the column field is shown and a column can be selected, else the field is not shown and the <i>Default column</i> will be used.",
            "default" : true
          },
          "flowVariableName" : {
            "type" : "string",
            "title" : "Output variable name",
            "description" : "Parameter identifier for external parameterization (e.g. batch execution).\nThis will also be the name of the exported flow variable.\n",
            "default" : "value-filter"
          },
          "hideInDialog" : {
            "type" : "boolean",
            "title" : "Hide in dialog",
            "description" : "Set this to true to hide this field in a component dialog.\n",
            "default" : false
          },
          "label" : {
            "type" : "string",
            "title" : "Label",
            "description" : "A descriptive label that will be shown for instance in the node description of the component exposing a dialog.",
            "default" : "Label"
          },
          "limitVisibleOptionsParameters" : {
            "type" : "object",
            "properties" : {
              "limitVisibleOptions" : {
                "type" : "object",
                "properties" : {
                  "limitNumberOfVisibleOptions" : {
                    "type" : "boolean",
                    "title" : "Limit number of visible options",
                    "description" : "By default the List and Twinlist components adjust their height to display all possible choices without a scroll bar. If the setting is enabled, you will be able to limit the number of visible options in case you have too many of them. The setting is available only for List or Twinlist selection type.",
                    "default" : false
                  },
                  "numberOfVisibleOptions" : {
                    "type" : "integer",
                    "format" : "int32",
                    "title" : "Number of visible options",
                    "description" : "A number of options visible in the List or Twinlist component without a vertical scroll bar. Changing this value will also affect the component's height. Notice that for Twinlist the height cannot be less than the overall height of the control buttons in the middle. The setting is available only for List or Twinlist selection type.",
                    "default" : 5
                  }
                },
                "default" : {
                  "limitNumberOfVisibleOptions" : false,
                  "numberOfVisibleOptions" : 5
                }
              },
              "selectionType" : {
                "type" : "string",
                "title" : "Selection type",
                "description" : "Type of the selection panel. This can be either checkboxes with a vertical or horizontal layout, a list, a combobox, or a twinlist selection.",
                "default" : "Twinlist"
              }
            },
            "default" : {
              "selectionType" : "Twinlist",
              "limitVisibleOptions" : {
                "limitNumberOfVisibleOptions" : false,
                "numberOfVisibleOptions" : 5
              }
            }
          },
          "overwrittenByValueMessage" : {
            "type" : "object"
          },
          "parameterName" : {
            "type" : "string",
            "title" : "Parameter name",
            "description" : "Parameter identifier for external parameterization (e.g. batch execution). Whenever the output variable name is adjusted, the current value of the parameter name is set to the same value.",
            "default" : "value-filter"
          },
          "possibleValues" : {
            "type" : "object",
            "default" : { }
          },
          "required" : {
            "type" : "boolean",
            "default" : true
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Form Field",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/label"
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/description"
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/selectionType",
        "options" : {
          "format" : "dropDown"
        },
        "providedOptions" : [ "possibleValues" ]
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/limitVisibleOptions/properties/limitNumberOfVisibleOptions",
        "options" : {
          "format" : "checkbox"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "OR",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/selectionType",
              "schema" : {
                "const" : "List"
              }
            }, {
              "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/selectionType",
              "schema" : {
                "const" : "Twinlist"
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/limitVisibleOptions/properties/numberOfVisibleOptions",
        "options" : {
          "validation" : {
            "max" : {
              "errorMessage" : "The value must not exceed 2147483647.",
              "parameters" : {
                "isExclusive" : false,
                "max" : 2.147483647E9
              }
            },
            "min" : {
              "errorMessage" : "The value must be at least 2.",
              "parameters" : {
                "isExclusive" : false,
                "min" : 2.0
              }
            }
          }
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "type" : "OR",
              "conditions" : [ {
                "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/selectionType",
                "schema" : {
                  "const" : "List"
                }
              }, {
                "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/selectionType",
                "schema" : {
                  "const" : "Twinlist"
                }
              } ]
            }, {
              "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/limitVisibleOptions/properties/limitNumberOfVisibleOptions",
              "schema" : {
                "const" : true
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/enableColumnField",
        "options" : {
          "format" : "checkbox"
        }
      } ]
    }, {
      "label" : "Output",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "id" : "#/properties/model/properties/overwrittenByValueMessage",
        "options" : {
          "format" : "textMessage"
        },
        "providedOptions" : [ "message" ]
      }, {
        "type" : "Control",
        "id" : "#/properties/model/properties/defaultValue/properties/noColumnsAvailableMessage",
        "options" : {
          "format" : "textMessage"
        },
        "providedOptions" : [ "message" ]
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/defaultValue/properties/column",
        "options" : {
          "format" : "dropDown"
        },
        "providedOptions" : [ "possibleValues" ]
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/defaultValue/properties/values",
        "options" : {
          "format" : "twinList"
        },
        "providedOptions" : [ "possibleValues" ]
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/defaultValue/properties/anyUnknownValueHandling",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/flowVariableName",
        "options" : {
          "validation" : {
            "pattern" : {
              "errorMessage" : "Value must start and end with a letter, and may contain only letters, digits, and single dashes.",
              "parameters" : {
                "pattern" : "[A-Za-z]((?:[A-Za-z0-9]|-(?=[A-Za-z0-9]))*[A-Za-z])?"
              }
            }
          }
        }
      } ]
    }, {
      "label" : "Advanced Settings",
      "type" : "Section",
      "options" : {
        "isAdvanced" : true
      },
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/parameterName",
        "options" : {
          "validation" : {
            "pattern" : {
              "errorMessage" : "Value must start and end with a letter, and may contain only letters, digits, and single dashes.",
              "parameters" : {
                "pattern" : "[A-Za-z]((?:[A-Za-z0-9]|-(?=[A-Za-z0-9]))*[A-Za-z])?"
              }
            }
          },
          "isAdvanced" : true
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/hideInDialog",
        "options" : {
          "format" : "checkbox",
          "isAdvanced" : true
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "label" : { },
          "description" : { },
          "flowVariableName" : { },
          "parameterName" : { },
          "hideInDialog" : { },
          "required" : { },
          "overwrittenByValueMessage" : { },
          "defaultValue" : {
            "type" : "object",
            "properties" : {
              "noColumnsAvailableMessage" : { },
              "column" : {
                "configKey" : "column"
              },
              "values" : {
                "configKey" : "values"
              },
              "excludes" : {
                "configKey" : "excludes"
              },
              "anyUnknownValueHandling" : {
                "configPaths" : [ [ "enforce-option" ] ]
              }
            }
          },
          "limitVisibleOptionsParameters" : {
            "type" : "object",
            "properties" : {
              "selectionType" : {
                "configKey" : "type"
              },
              "limitVisibleOptions" : {
                "type" : "object",
                "properties" : {
                  "limitNumberOfVisibleOptions" : {
                    "configKey" : "limit_number_visible_options"
                  },
                  "numberOfVisibleOptions" : {
                    "configKey" : "number_visible_options"
                  }
                },
                "propertiesRoute" : [ ".." ]
              }
            },
            "propertiesRoute" : [ ".." ]
          },
          "enableColumnField" : {
            "configPaths" : [ [ "lockColumn" ] ]
          },
          "possibleValues" : {
            "configPaths" : [ ]
          }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scope" : "#/properties/model/properties/defaultValue/properties/column",
    "values" : [ {
      "indices" : [ ],
      "value" : "StringColumn"
    } ]
  }, {
    "scope" : "#/properties/model/properties/defaultValue/properties/column",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ {
        "id" : "StringColumn",
        "text" : "StringColumn",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      }, {
        "id" : "CategoryColumn",
        "text" : "CategoryColumn",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      } ]
    } ]
  }, {
    "scope" : "#/properties/model/properties/defaultValue/properties/values",
    "values" : [ {
      "indices" : [ ],
      "value" : [ ]
    } ]
  }, {
    "scope" : "#/properties/model/properties/defaultValue/properties/values",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ ]
    } ]
  }, {
    "scope" : "#/properties/model/properties/limitVisibleOptionsParameters/properties/selectionType",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ {
        "id" : "Check boxes (horizontal)",
        "text" : "Check boxes (horizontal)"
      }, {
        "id" : "Check boxes (vertical)",
        "text" : "Check boxes (vertical)"
      }, {
        "id" : "List",
        "text" : "List"
      }, {
        "id" : "Twinlist",
        "text" : "Twinlist"
      }, {
        "id" : "ComboBox",
        "text" : "ComboBox"
      } ]
    } ]
  }, {
    "scope" : "#/properties/model/properties/possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : {
        "CategoryColumn" : [ "A", "B", "C" ],
        "StringColumn" : [ "C1", "C2", "C3" ]
      }
    } ]
  }, {
    "id" : "#/properties/model/properties/defaultValue/properties/noColumnsAvailableMessage",
    "providedOptionName" : "message",
    "values" : [ {
      "indices" : [ ],
      "value" : null
    } ]
  } ],
  "globalUpdates" : [ {
    "trigger" : {
      "id" : "after-open-dialog"
    },
    "triggerInitially" : true,
    "dependencies" : [ "#/properties/model/properties/defaultValue/properties/anyUnknownValueHandling", "#/properties/model/properties/defaultValue/properties/column", "#/properties/model/properties/defaultValue/properties/excludes", "#/properties/model/properties/defaultValue/properties/values", "#/properties/model/properties/enableColumnField" ]
  }, {
    "trigger" : {
      "scope" : "#/properties/model/properties/defaultValue/properties/column"
    },
    "dependencies" : [ "#/properties/model/properties/defaultValue/properties/anyUnknownValueHandling", "#/properties/model/properties/defaultValue/properties/column", "#/properties/model/properties/defaultValue/properties/excludes", "#/properties/model/properties/defaultValue/properties/values" ]
  }, {
    "trigger" : {
      "scope" : "#/properties/model/properties/defaultValue/properties/values"
    },
    "dependencies" : [ "#/properties/model/properties/defaultValue/properties/column", "#/properties/model/properties/defaultValue/properties/values", "#/properties/model/properties/possibleValues" ]
  }, {
    "trigger" : {
      "scope" : "#/properties/model/properties/enableColumnField"
    },
    "dependencies" : [ "#/properties/model/properties/enableColumnField" ]
  }, {
    "trigger" : {
      "scope" : "#/properties/model/properties/flowVariableName"
    },
    "dependencies" : [ "#/properties/model/properties/flowVariableName" ]
  } ]
}